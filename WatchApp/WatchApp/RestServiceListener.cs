//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by slsvcutil, version 4.0.60310.0
// 
namespace CADRMSService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventInfo", Namespace="http://schemas.datacontract.org/2004/07/CADRMSService")]
    public partial class EventInfo : object
    {
        
        private string AgencyEventIdField;
        
        private string CaseNumberField;
        
        private int CommonEventIdField;
        
        private string EventTypeField;
        
        private string LocationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgencyEventId
        {
            get
            {
                return this.AgencyEventIdField;
            }
            set
            {
                this.AgencyEventIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseNumber
        {
            get
            {
                return this.CaseNumberField;
            }
            set
            {
                this.CaseNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommonEventId
        {
            get
            {
                return this.CommonEventIdField;
            }
            set
            {
                this.CommonEventIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventType
        {
            get
            {
                return this.EventTypeField;
            }
            set
            {
                this.EventTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                this.LocationField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IRestServiceListener")]
public interface IRestServiceListener
{
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRestServiceListener/XMLData", ReplyAction="http://tempuri.org/IRestServiceListener/XMLDataResponse")]
    System.IAsyncResult BeginXMLData(string id, System.AsyncCallback callback, object asyncState);
    
    string EndXMLData(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRestServiceListener/JSONData", ReplyAction="http://tempuri.org/IRestServiceListener/JSONDataResponse")]
    System.IAsyncResult BeginJSONData(string id, System.AsyncCallback callback, object asyncState);
    
    string EndJSONData(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRestServiceListener/GetEventInfomationFromEventId", ReplyAction="http://tempuri.org/IRestServiceListener/GetEventInfomationFromEventIdResponse")]
    System.IAsyncResult BeginGetEventInfomationFromEventId(string eventId, System.AsyncCallback callback, object asyncState);
    
    CADRMSService.EventInfo EndGetEventInfomationFromEventId(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRestServiceListener/CreateEvent", ReplyAction="http://tempuri.org/IRestServiceListener/CreateEventResponse")]
    System.IAsyncResult BeginCreateEvent(string location, string type, System.AsyncCallback callback, object asyncState);
    
    string EndCreateEvent(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IRestServiceListenerChannel : IRestServiceListener, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class XMLDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public XMLDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class JSONDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public JSONDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetEventInfomationFromEventIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetEventInfomationFromEventIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public CADRMSService.EventInfo Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((CADRMSService.EventInfo)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class CreateEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public CreateEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class RestServiceListenerClient : System.ServiceModel.ClientBase<IRestServiceListener>, IRestServiceListener
{
    
    private BeginOperationDelegate onBeginXMLDataDelegate;
    
    private EndOperationDelegate onEndXMLDataDelegate;
    
    private System.Threading.SendOrPostCallback onXMLDataCompletedDelegate;
    
    private BeginOperationDelegate onBeginJSONDataDelegate;
    
    private EndOperationDelegate onEndJSONDataDelegate;
    
    private System.Threading.SendOrPostCallback onJSONDataCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetEventInfomationFromEventIdDelegate;
    
    private EndOperationDelegate onEndGetEventInfomationFromEventIdDelegate;
    
    private System.Threading.SendOrPostCallback onGetEventInfomationFromEventIdCompletedDelegate;
    
    private BeginOperationDelegate onBeginCreateEventDelegate;
    
    private EndOperationDelegate onEndCreateEventDelegate;
    
    private System.Threading.SendOrPostCallback onCreateEventCompletedDelegate;
    
    private BeginOperationDelegate onBeginOpenDelegate;
    
    private EndOperationDelegate onEndOpenDelegate;
    
    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
    
    private BeginOperationDelegate onBeginCloseDelegate;
    
    private EndOperationDelegate onEndCloseDelegate;
    
    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
    
    public RestServiceListenerClient()
    {
    }
    
    public RestServiceListenerClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public RestServiceListenerClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public RestServiceListenerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public RestServiceListenerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }
    
    public event System.EventHandler<XMLDataCompletedEventArgs> XMLDataCompleted;
    
    public event System.EventHandler<JSONDataCompletedEventArgs> JSONDataCompleted;
    
    public event System.EventHandler<GetEventInfomationFromEventIdCompletedEventArgs> GetEventInfomationFromEventIdCompleted;
    
    public event System.EventHandler<CreateEventCompletedEventArgs> CreateEventCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IRestServiceListener.BeginXMLData(string id, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginXMLData(id, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string IRestServiceListener.EndXMLData(System.IAsyncResult result)
    {
        return base.Channel.EndXMLData(result);
    }
    
    private System.IAsyncResult OnBeginXMLData(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string id = ((string)(inValues[0]));
        return ((IRestServiceListener)(this)).BeginXMLData(id, callback, asyncState);
    }
    
    private object[] OnEndXMLData(System.IAsyncResult result)
    {
        string retVal = ((IRestServiceListener)(this)).EndXMLData(result);
        return new object[] {
                retVal};
    }
    
    private void OnXMLDataCompleted(object state)
    {
        if ((this.XMLDataCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.XMLDataCompleted(this, new XMLDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void XMLDataAsync(string id)
    {
        this.XMLDataAsync(id, null);
    }
    
    public void XMLDataAsync(string id, object userState)
    {
        if ((this.onBeginXMLDataDelegate == null))
        {
            this.onBeginXMLDataDelegate = new BeginOperationDelegate(this.OnBeginXMLData);
        }
        if ((this.onEndXMLDataDelegate == null))
        {
            this.onEndXMLDataDelegate = new EndOperationDelegate(this.OnEndXMLData);
        }
        if ((this.onXMLDataCompletedDelegate == null))
        {
            this.onXMLDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnXMLDataCompleted);
        }
        base.InvokeAsync(this.onBeginXMLDataDelegate, new object[] {
                    id}, this.onEndXMLDataDelegate, this.onXMLDataCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IRestServiceListener.BeginJSONData(string id, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginJSONData(id, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string IRestServiceListener.EndJSONData(System.IAsyncResult result)
    {
        return base.Channel.EndJSONData(result);
    }
    
    private System.IAsyncResult OnBeginJSONData(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string id = ((string)(inValues[0]));
        return ((IRestServiceListener)(this)).BeginJSONData(id, callback, asyncState);
    }
    
    private object[] OnEndJSONData(System.IAsyncResult result)
    {
        string retVal = ((IRestServiceListener)(this)).EndJSONData(result);
        return new object[] {
                retVal};
    }
    
    private void OnJSONDataCompleted(object state)
    {
        if ((this.JSONDataCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.JSONDataCompleted(this, new JSONDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void JSONDataAsync(string id)
    {
        this.JSONDataAsync(id, null);
    }
    
    public void JSONDataAsync(string id, object userState)
    {
        if ((this.onBeginJSONDataDelegate == null))
        {
            this.onBeginJSONDataDelegate = new BeginOperationDelegate(this.OnBeginJSONData);
        }
        if ((this.onEndJSONDataDelegate == null))
        {
            this.onEndJSONDataDelegate = new EndOperationDelegate(this.OnEndJSONData);
        }
        if ((this.onJSONDataCompletedDelegate == null))
        {
            this.onJSONDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnJSONDataCompleted);
        }
        base.InvokeAsync(this.onBeginJSONDataDelegate, new object[] {
                    id}, this.onEndJSONDataDelegate, this.onJSONDataCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IRestServiceListener.BeginGetEventInfomationFromEventId(string eventId, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetEventInfomationFromEventId(eventId, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    CADRMSService.EventInfo IRestServiceListener.EndGetEventInfomationFromEventId(System.IAsyncResult result)
    {
        return base.Channel.EndGetEventInfomationFromEventId(result);
    }
    
    private System.IAsyncResult OnBeginGetEventInfomationFromEventId(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string eventId = ((string)(inValues[0]));
        return ((IRestServiceListener)(this)).BeginGetEventInfomationFromEventId(eventId, callback, asyncState);
    }
    
    private object[] OnEndGetEventInfomationFromEventId(System.IAsyncResult result)
    {
        CADRMSService.EventInfo retVal = ((IRestServiceListener)(this)).EndGetEventInfomationFromEventId(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetEventInfomationFromEventIdCompleted(object state)
    {
        if ((this.GetEventInfomationFromEventIdCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetEventInfomationFromEventIdCompleted(this, new GetEventInfomationFromEventIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetEventInfomationFromEventIdAsync(string eventId)
    {
        this.GetEventInfomationFromEventIdAsync(eventId, null);
    }
    
    public void GetEventInfomationFromEventIdAsync(string eventId, object userState)
    {
        if ((this.onBeginGetEventInfomationFromEventIdDelegate == null))
        {
            this.onBeginGetEventInfomationFromEventIdDelegate = new BeginOperationDelegate(this.OnBeginGetEventInfomationFromEventId);
        }
        if ((this.onEndGetEventInfomationFromEventIdDelegate == null))
        {
            this.onEndGetEventInfomationFromEventIdDelegate = new EndOperationDelegate(this.OnEndGetEventInfomationFromEventId);
        }
        if ((this.onGetEventInfomationFromEventIdCompletedDelegate == null))
        {
            this.onGetEventInfomationFromEventIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEventInfomationFromEventIdCompleted);
        }
        base.InvokeAsync(this.onBeginGetEventInfomationFromEventIdDelegate, new object[] {
                    eventId}, this.onEndGetEventInfomationFromEventIdDelegate, this.onGetEventInfomationFromEventIdCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IRestServiceListener.BeginCreateEvent(string location, string type, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginCreateEvent(location, type, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string IRestServiceListener.EndCreateEvent(System.IAsyncResult result)
    {
        return base.Channel.EndCreateEvent(result);
    }
    
    private System.IAsyncResult OnBeginCreateEvent(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string location = ((string)(inValues[0]));
        string type = ((string)(inValues[1]));
        return ((IRestServiceListener)(this)).BeginCreateEvent(location, type, callback, asyncState);
    }
    
    private object[] OnEndCreateEvent(System.IAsyncResult result)
    {
        string retVal = ((IRestServiceListener)(this)).EndCreateEvent(result);
        return new object[] {
                retVal};
    }
    
    private void OnCreateEventCompleted(object state)
    {
        if ((this.CreateEventCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CreateEventCompleted(this, new CreateEventCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CreateEventAsync(string location, string type)
    {
        this.CreateEventAsync(location, type, null);
    }
    
    public void CreateEventAsync(string location, string type, object userState)
    {
        if ((this.onBeginCreateEventDelegate == null))
        {
            this.onBeginCreateEventDelegate = new BeginOperationDelegate(this.OnBeginCreateEvent);
        }
        if ((this.onEndCreateEventDelegate == null))
        {
            this.onEndCreateEventDelegate = new EndOperationDelegate(this.OnEndCreateEvent);
        }
        if ((this.onCreateEventCompletedDelegate == null))
        {
            this.onCreateEventCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateEventCompleted);
        }
        base.InvokeAsync(this.onBeginCreateEventDelegate, new object[] {
                    location,
                    type}, this.onEndCreateEventDelegate, this.onCreateEventCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }
    
    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }
    
    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void OpenAsync()
    {
        this.OpenAsync(null);
    }
    
    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }
    
    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }
    
    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CloseAsync()
    {
        this.CloseAsync(null);
    }
    
    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }
    
    protected override IRestServiceListener CreateChannel()
    {
        return new RestServiceListenerClientChannel(this);
    }
    
    private class RestServiceListenerClientChannel : ChannelBase<IRestServiceListener>, IRestServiceListener
    {
        
        public RestServiceListenerClientChannel(System.ServiceModel.ClientBase<IRestServiceListener> client) : 
                base(client)
        {
        }
        
        public System.IAsyncResult BeginXMLData(string id, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = id;
            System.IAsyncResult _result = base.BeginInvoke("XMLData", _args, callback, asyncState);
            return _result;
        }
        
        public string EndXMLData(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("XMLData", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginJSONData(string id, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = id;
            System.IAsyncResult _result = base.BeginInvoke("JSONData", _args, callback, asyncState);
            return _result;
        }
        
        public string EndJSONData(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("JSONData", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetEventInfomationFromEventId(string eventId, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = eventId;
            System.IAsyncResult _result = base.BeginInvoke("GetEventInfomationFromEventId", _args, callback, asyncState);
            return _result;
        }
        
        public CADRMSService.EventInfo EndGetEventInfomationFromEventId(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            CADRMSService.EventInfo _result = ((CADRMSService.EventInfo)(base.EndInvoke("GetEventInfomationFromEventId", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginCreateEvent(string location, string type, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[2];
            _args[0] = location;
            _args[1] = type;
            System.IAsyncResult _result = base.BeginInvoke("CreateEvent", _args, callback, asyncState);
            return _result;
        }
        
        public string EndCreateEvent(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("CreateEvent", _args, result)));
            return _result;
        }
    }
}
